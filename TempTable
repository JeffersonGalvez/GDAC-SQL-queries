-- Find which station the longest-used bike leaves most often.

-- Temp table creation
-- organises trip_duration values by bikeid i.e. this temp table now shows the TOTAL minutes each bikeid has
WITH 
    longest_used_bike AS (
        SELECT
            bikeid,
            SUM(duration_minutes) AS trip_duration 
        FROM 
            `bigquery-public-data.austin_bikeshare.bikeshare_trips`
        GROUP BY 
            bikeid 
        ORDER BY
            trip_duration DESC
        LIMIT
            1;

-- Time to join the temp table witht the original table, to link the bikeid with the most minutes with the station it leaves from the most
-- joins temp table with original table and aliases combined table as trips
SELECT
    trips.start_station_id,
    COUNT(*) AS trip_count
FROM
    longest_used_bike AS longest
INNER JOIN `bigquery-public-data.austin_bikeshare.bikeshare_trips` AS trips 
    ON longest.bikeid = trips.bikeid
GROUP BY 
    trips.start_station_id
ORDER BY 
    trip_count DESC
LIMIT
    1;
